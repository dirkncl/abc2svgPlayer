#! /usr/bin/env node

// abc2svg with native nodeJS

// define the system functions
    var	sep = require('path').sep

function usage() {
	abc2svg.printErr('ABC translator with Node.js\
 and abc2svg-' + abc2svg.version + ' ' + abc2svg.vdate + '\n\
Usage:\n\
  abc2svg [script.js] [g_options] ABC_file [f_options] [ABC_file [f_options]]*\n\
Arguments:\n\
  script.js  generation script to load - default: toxhtml.js (XHTML+SVG)\n\
  g_options  global ABC options\n\
  ABC_file   ABC file\n\
  f_options  file options')
	abc2svg.quit()
}

// load the abc2svg core
var m = require("abc2svg/abc2svg-1");
global.abc2svg = m.abc2svg;
global.Abc = m.Abc;

// interpreter specific functions
abc2svg.print = function(str) {
	process.stdout.write(str + '\n')
}
abc2svg.printErr = function(str) {
	process.stderr.write(str + '\n')
}
abc2svg.quit = function() {
	process.exit(1)
}
abc2svg.readFile = function(fname) {
    var	fs = require("fs")

	return fs.readFileSync(fname).toString()
}

abc2svg.loadjs = function(fn, relay, onerror) {
	try {
		var geval = eval;
		geval(abc2svg.readFile(__dirname + sep + fn))
		if (relay)
			relay()
	} catch(e) {
		if (onerror)
			onerror()
		else
			printErr('Cannot read file ' + fn)
	}
}

// load the command line
m = require("abc2svg/cmdline");
global.abc = m.abc;
global.user = m.user;
global.abc_cmd = m.abc_cmd

// main
var args = process.argv
if (!args[2])
	usage();
args.shift();
args.shift()

// if the first argument is a script, load it
if (/\.js$/.test(args[0])) {
    var fn = args[0][0] == '/' ? args[0] : (__dirname + '/' + args[0]),
	f = abc2svg.readFile(fn);
	eval(f);
	args.shift()
}

// if no rendering engine, load xhtml
if (typeof(abc2svg.abc_init) != 'function')
	require("abc2svg/toxhtml");

abc_cmd("nodeJS", args)
